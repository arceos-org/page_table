var searchIndex = new Map(JSON.parse('[["page_table_entry",{"t":"TTKFTTTTCNNNNNMNNNNNNMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNMMMNNCMMNMNCNMMNNNNNNNNCFTTTTTTTFPTTGTTTTPPTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTFTTTTTTTFTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTFTFTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTTTTTTTTTTTTTTFTTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DEVICE","EXECUTE","GenericPTE","MappingFlags","READ","UNCACHED","USER","WRITE","aarch64","all","bitand","bitand_assign","bitor","bitor_assign","bits","","","bitxor","bitxor_assign","borrow","borrow_mut","clear","clone","clone_to_uninit","complement","contains","difference","empty","eq","extend","flags","fmt","","","","","from","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into_iter","is_all","is_empty","is_huge","is_present","is_unused","iter","iter_names","loongarch64","new_page","new_table","not","paddr","remove","riscv","set","set_flags","set_paddr","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","x86_64","A64PTE","AF","AP_EL0","AP_NO_EL0_TABLE","AP_NO_WRITE_TABLE","AP_RO","ATTR_INDX","CONTIGUOUS","DescriptorAttr","Device","INNER","MAIR_VALUE","MemAttr","NG","NON_BLOCK","NS","NS_TABLE","Normal","NormalNonCacheable","PXN","PXN_TABLE","SHAREABLE","UXN","VALID","XN_TABLE","all","","bitand","bitand_assign","bitor","bitor_assign","bits","","","","bitxor","bitxor_assign","borrow","","","borrow_mut","","","clear","clone","","clone_to_uninit","","complement","","contains","","difference","","empty","","","eq","extend","flags","fmt","","","","","","","from","","","","from_bits","","from_bits_retain","","","from_bits_truncate","","from_iter","from_mem_attr","from_name","","insert","","intersection","","intersects","","into","","","into_iter","is_all","","is_empty","","is_huge","is_present","is_unused","iter","","iter_names","","mem_attr","new_page","new_table","not","paddr","remove","","set","","set_flags","set_paddr","sub","sub_assign","symmetric_difference","","toggle","","try_from","","","try_into","","","type_id","","","union","","D","G","GH","LA64PTE","MATH","MATL","NR","NX","P","PLVH","PLVL","PTEFlags","RPLV","V","W","all","","bitand","bitand_assign","bitor","bitor_assign","bits","","","","bitxor","bitxor_assign","borrow","","borrow_mut","","clear","clone","clone_to_uninit","complement","","contains","","difference","","empty","","extend","flags","fmt","","","","","","from","","","from_bits","","from_bits_retain","","","from_bits_truncate","","from_iter","from_name","","insert","","intersection","","intersects","","into","","into_iter","is_all","","is_empty","","is_huge","is_present","is_unused","iter","","iter_names","","new_page","new_table","not","paddr","remove","","set","","set_flags","set_paddr","sub","sub_assign","symmetric_difference","","toggle","","try_from","","try_into","","type_id","","union","","A","D","G","PTEFlags","R","Rv64PTE","U","V","W","X","all","","bitand","bitand_assign","bitor","bitor_assign","bits","","","","bitxor","bitxor_assign","borrow","","borrow_mut","","clear","clone","clone_to_uninit","complement","","contains","","difference","","empty","","extend","flags","fmt","","","","","","from","","","from_bits","","from_bits_retain","","","from_bits_truncate","","from_iter","from_name","","insert","","intersection","","intersects","","into","","into_iter","is_all","","is_empty","","is_huge","is_present","is_unused","iter","","iter_names","","new_page","new_table","not","paddr","remove","","set","","set_flags","set_paddr","sub","sub_assign","symmetric_difference","","toggle","","try_from","","try_into","","type_id","","union","","ACCESSED","BIT_10","BIT_11","BIT_52","BIT_53","BIT_54","BIT_55","BIT_56","BIT_57","BIT_58","BIT_59","BIT_60","BIT_61","BIT_62","BIT_9","DIRTY","GLOBAL","HUGE_PAGE","NO_CACHE","NO_EXECUTE","PRESENT","PTF","USER_ACCESSIBLE","WRITABLE","WRITE_THROUGH","X64PTE","all","bitand","bitand_assign","bitor","bitor_assign","bits","","","bitxor","bitxor_assign","borrow","","borrow_mut","","clear","clone","","clone_to_uninit","","cmp","complement","contains","difference","empty","eq","extend","flags","fmt","","","","","","from","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","hash","insert","intersection","intersects","into","","into_iter","is_all","is_empty","is_huge","is_present","is_unused","iter","iter_names","new_page","new_table","not","paddr","partial_cmp","remove","set","set_flags","set_paddr","sub","sub_assign","symmetric_difference","toggle","try_from","","try_into","","type_id","","union"],"q":[[0,"page_table_entry"],[78,"page_table_entry::aarch64"],[209,"page_table_entry::loongarch64"],[316,"page_table_entry::riscv"],[418,"page_table_entry::x86_64"],[520,"core::iter::traits::collect"],[521,"core::fmt"],[522,"page_table_entry::arch::aarch64"],[523,"page_table_entry::arch::loongarch64"],[524,"page_table_entry::arch::riscv"],[525,"core::option"],[526,"bitflags::iter"],[527,"memory_addr::addr"],[528,"core::result"],[529,"core::any"],[530,"page_table_entry::arch::x86_64"],[531,"core::cmp"],[532,"core::hash"],[533,"page_table_entry::arch"]],"i":"b0``0000`00000j11111101111111101111111111111111111111100011`00101`10011111111``Aj000000`Cd10`111100111111111111111Cb222102100101022222222012022222102210222222222222222222102222200022222002022220022222221021021022An00`0000000`000000000000Cf1110100001111111110111110110111111111111111110111110001111001011110011111110101011B`00`0`0000000000000Ch1110100001111111110111110110111111111111111110111110001111001011110011111110101011Al00000000000000000000`000`00000Cj1111010100101111111100111110111111111111011110001100101110011110101011","f":"`````````{{}b}{{bb}b}{{{f{db}}b}h}10{jl}{{{f{b}}}l}032{f{{f{c}}}{}}{{{f{d}}}{{f{dc}}}{}}{{{f{dj}}}h}{{{f{b}}}b}{{fn}h}{bb}{{{f{b}}b}A`}:;{{{f{b}}{f{b}}}A`}{{{f{db}}c}h{{Ad{}{{Ab{b}}}}}}{{{f{j}}}b}{{{f{b}}{f{dAf}}}Ah}0000{Ajb}{cc{}}{Alb}{Anb}{B`b}{l{{Bb{b}}}}{lb}00{cb{{Ad{}{{Ab{b}}}}}}{{{f{Bd}}}{{Bb{b}}}}{{{f{db}}b}h}{{bb}b}?{{}c{}}{bc{}}{{{f{b}}}A`}0{{{f{j}}}A`}00{{{f{b}}}{{Bf{b}}}}{{{f{b}}}{{Bh{b}}}}`{{BjbA`}j}{Bjj}{bb}{{{f{j}}}Bj};`{{{f{db}}bA`}h}{{{f{dj}}bA`}h}{{{f{dj}}Bj}h}=>=>{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fBn}{{bb}b}``````````````````````````{{}Aj}0{{AjAj}Aj}{{{f{dAj}}Aj}h}10{{{f{Aj}}}C`}00{Cbl}32{f{{f{c}}}{}}00{{{f{d}}}{{f{dc}}}{}}00{{{f{dCb}}}h}{{{f{Cd}}}Cd}{{{f{Cb}}}Cb}{{fn}h}0{AjAj}0{{{f{Aj}}Aj}A`}0;;<<{{}Cb}{{{f{Cd}}{f{Cd}}}A`}{{{f{dAj}}c}h{{Ad{}{{Ab{Aj}}}}}}{{{f{Cb}}}b}{{{f{Aj}}{f{dAf}}}Ah}0000{{{f{Cd}}{f{dAf}}}Ah}{{{f{Cb}}{f{dAf}}}Ah}{bAj}{cc{}}00{C`{{Bb{Aj}}}}0{C`Aj}0000{cAj{{Ad{}{{Ab{Aj}}}}}}{CdAj}{{{f{Bd}}}{{Bb{Aj}}}}0{{{f{dAj}}Aj}h}0{{AjAj}Aj}0{{{f{Aj}}Aj}A`}0{{}c{}}00{Ajc{}}{{{f{Aj}}}A`}000{{{f{Cb}}}A`}00{{{f{Aj}}}{{Bf{Aj}}}}0{{{f{Aj}}}{{Bh{Aj}}}}0{{{f{Aj}}}{{Bb{Cd}}}}{{BjbA`}Cb}{BjCb}{AjAj}{{{f{Cb}}}Bj}=={{{f{dAj}}AjA`}h}0{{{f{dCb}}bA`}h}{{{f{dCb}}Bj}h}?{{{f{dAj}}Aj}h}{{AjAj}Aj}011{c{{Bl{e}}}{}{}}00{{}{{Bl{c}}}{}}00{fBn}0033```````````````{{}An}0{{AnAn}An}{{{f{dAn}}An}h}10{{{f{An}}}C`}00{Cfl}32{f{{f{c}}}{}}0{{{f{d}}}{{f{dc}}}{}}0{{{f{dCf}}}h}{{{f{Cf}}}Cf}{{fn}h}{AnAn}0{{{f{An}}An}A`}0::;;{{{f{dAn}}c}h{{Ad{}{{Ab{An}}}}}}{{{f{Cf}}}b}{{{f{An}}{f{dAf}}}Ah}0000{{{f{Cf}}{f{dAf}}}Ah}{cc{}}{bAn}1{C`{{Bb{An}}}}0{C`An}0000{cAn{{Ad{}{{Ab{An}}}}}}{{{f{Bd}}}{{Bb{An}}}}0{{{f{dAn}}An}h}0{{AnAn}An}0<<{{}c{}}0{Anc{}}{{{f{An}}}A`}000{{{f{Cf}}}A`}00{{{f{An}}}{{Bf{An}}}}0{{{f{An}}}{{Bh{An}}}}0{{BjbA`}Cf}{BjCf}{AnAn}{{{f{Cf}}}Bj};;{{{f{dAn}}AnA`}h}0{{{f{dCf}}bA`}h}{{{f{dCf}}Bj}h}=>==>>{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{fBn}0{{AnAn}An}0``````````{{}B`}0{{B`B`}B`}{{{f{dB`}}B`}h}10{{{f{B`}}}l}00{Chl}32{f{{f{c}}}{}}0{{{f{d}}}{{f{dc}}}{}}0{{{f{dCh}}}h}{{{f{Ch}}}Ch}{{fn}h}{B`B`}0{{{f{B`}}B`}A`}0::;;{{{f{dB`}}c}h{{Ad{}{{Ab{B`}}}}}}{{{f{Ch}}}b}{{{f{B`}}{f{dAf}}}Ah}0000{{{f{Ch}}{f{dAf}}}Ah}{bB`}{cc{}}0{l{{Bb{B`}}}}0{lB`}0000{cB`{{Ad{}{{Ab{B`}}}}}}{{{f{Bd}}}{{Bb{B`}}}}0{{{f{dB`}}B`}h}0{{B`B`}B`}0<<{{}c{}}0{B`c{}}{{{f{B`}}}A`}000{{{f{Ch}}}A`}00{{{f{B`}}}{{Bf{B`}}}}0{{{f{B`}}}{{Bh{B`}}}}0{{BjbA`}Ch}{BjCh}{B`B`}{{{f{Ch}}}Bj};;{{{f{dB`}}B`A`}h}0{{{f{dCh}}bA`}h}{{{f{dCh}}Bj}h}=>==>>{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{fBn}0{{B`B`}B`}0``````````````````````````{{}Al}{{AlAl}Al}{{{f{dAl}}Al}h}10{Cjl}{{{f{Al}}}C`}032{f{{f{c}}}{}}0{{{f{d}}}{{f{dc}}}{}}0{{{f{dCj}}}h}{{{f{Cj}}}Cj}{{{f{Al}}}Al}{{fn}h}0{{{f{Al}}{f{Al}}}Cl}{AlAl}{{{f{Al}}Al}A`}<={{{f{Al}}{f{Al}}}A`}{{{f{dAl}}c}h{{Ad{}{{Ab{Al}}}}}}{{{f{Cj}}}b}{{{f{Cj}}{f{dAf}}}Ah}{{{f{Al}}{f{dAf}}}{{Bl{hCn}}}}0000{cc{}}0{bAl}{C`{{Bb{Al}}}}{C`Al}00{cAl{{Ad{}{{Ab{Al}}}}}}{{{f{Bd}}}{{Bb{Al}}}}{{{f{Al}}{f{dc}}}hD`}{{{f{dAl}}Al}h}{{AlAl}Al}>{{}c{}}0{Al}{{{f{Al}}}A`}0{{{f{Cj}}}A`}00{{{f{Al}}}{{Bf{Al}}}}{{{f{Al}}}{{Bh{Al}}}}{{BjbA`}Cj}{BjCj}{AlAl}{{{f{Cj}}}Bj}{{{f{Al}}{f{Al}}}{{Bb{Cl}}}}<{{{f{dAl}}AlA`}h}{{{f{dCj}}bA`}h}{{{f{dCj}}Bj}h}>?>?{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{fBn}0{{AlAl}Al}","D":"BLd","p":[[5,"MappingFlags",0],[0,"mut"],[1,"reference",null,null,1],[1,"unit"],[10,"GenericPTE",0],[1,"usize"],[1,"u8"],[1,"bool"],[17,"Item"],[10,"IntoIterator",520],[5,"Formatter",521],[8,"Result",521],[5,"DescriptorAttr",78,522],[5,"PTF",418],[5,"PTEFlags",209,523],[5,"PTEFlags",316,524],[6,"Option",525,null,1],[1,"str"],[5,"Iter",526],[5,"IterNames",526],[5,"PhysAddr",527],[6,"Result",528,null,1],[5,"TypeId",529],[1,"u64"],[5,"A64PTE",78,522],[6,"MemAttr",78,522],[5,"LA64PTE",209,523],[5,"Rv64PTE",316,524],[5,"X64PTE",418,530],[6,"Ordering",531],[5,"Error",521],[10,"Hasher",532]],"r":[[8,533],[59,533],[65,533],[77,533],[78,522],[79,522],[80,522],[81,522],[82,522],[83,522],[84,522],[85,522],[86,522],[87,522],[88,522],[89,522],[90,522],[91,522],[92,522],[93,522],[94,522],[95,522],[96,522],[97,522],[98,522],[99,522],[100,522],[101,522],[102,522],[103,522],[104,522],[105,522],[106,522],[107,522],[108,522],[109,522],[110,522],[111,522],[112,522],[113,522],[114,522],[115,522],[116,522],[117,522],[118,522],[119,522],[120,522],[121,522],[122,522],[123,522],[124,522],[125,522],[126,522],[127,522],[128,522],[129,522],[130,522],[131,522],[132,522],[133,522],[134,522],[135,522],[136,522],[137,522],[138,522],[139,522],[140,522],[141,522],[142,522],[143,522],[144,522],[145,522],[146,522],[147,522],[148,522],[149,522],[150,522],[151,522],[152,522],[153,522],[154,522],[155,522],[156,522],[157,522],[158,522],[159,522],[160,522],[161,522],[162,522],[163,522],[164,522],[165,522],[166,522],[167,522],[168,522],[169,522],[170,522],[171,522],[172,522],[173,522],[174,522],[175,522],[176,522],[177,522],[178,522],[179,522],[180,522],[181,522],[182,522],[183,522],[184,522],[185,522],[186,522],[187,522],[188,522],[189,522],[190,522],[191,522],[192,522],[193,522],[194,522],[195,522],[196,522],[197,522],[198,522],[199,522],[200,522],[201,522],[202,522],[203,522],[204,522],[205,522],[206,522],[207,522],[208,522],[209,523],[210,523],[211,523],[212,523],[213,523],[214,523],[215,523],[216,523],[217,523],[218,523],[219,523],[220,523],[221,523],[222,523],[223,523],[224,523],[225,523],[226,523],[227,523],[228,523],[229,523],[230,523],[231,523],[232,523],[233,523],[234,523],[235,523],[236,523],[237,523],[238,523],[239,523],[240,523],[241,523],[242,523],[243,523],[244,523],[245,523],[246,523],[247,523],[248,523],[249,523],[250,523],[251,523],[252,523],[253,523],[254,523],[255,523],[256,523],[257,523],[258,523],[259,523],[260,523],[261,523],[262,523],[263,523],[264,523],[265,523],[266,523],[267,523],[268,523],[269,523],[270,523],[271,523],[272,523],[273,523],[274,523],[275,523],[276,523],[277,523],[278,523],[279,523],[280,523],[281,523],[282,523],[283,523],[284,523],[285,523],[286,523],[287,523],[288,523],[289,523],[290,523],[291,523],[292,523],[293,523],[294,523],[295,523],[296,523],[297,523],[298,523],[299,523],[300,523],[301,523],[302,523],[303,523],[304,523],[305,523],[306,523],[307,523],[308,523],[309,523],[310,523],[311,523],[312,523],[313,523],[314,523],[315,523],[316,524],[317,524],[318,524],[319,524],[320,524],[321,524],[322,524],[323,524],[324,524],[325,524],[326,524],[327,524],[328,524],[329,524],[330,524],[331,524],[332,524],[333,524],[334,524],[335,524],[336,524],[337,524],[338,524],[339,524],[340,524],[341,524],[342,524],[343,524],[344,524],[345,524],[346,524],[347,524],[348,524],[349,524],[350,524],[351,524],[352,524],[353,524],[354,524],[355,524],[356,524],[357,524],[358,524],[359,524],[360,524],[361,524],[362,524],[363,524],[364,524],[365,524],[366,524],[367,524],[368,524],[369,524],[370,524],[371,524],[372,524],[373,524],[374,524],[375,524],[376,524],[377,524],[378,524],[379,524],[380,524],[381,524],[382,524],[383,524],[384,524],[385,524],[386,524],[387,524],[388,524],[389,524],[390,524],[391,524],[392,524],[393,524],[394,524],[395,524],[396,524],[397,524],[398,524],[399,524],[400,524],[401,524],[402,524],[403,524],[404,524],[405,524],[406,524],[407,524],[408,524],[409,524],[410,524],[411,524],[412,524],[413,524],[414,524],[415,524],[416,524],[417,524],[443,530],[449,530],[454,530],[456,530],[458,530],[459,530],[461,530],[470,530],[471,530],[477,530],[490,530],[495,530],[496,530],[497,530],[500,530],[501,530],[503,530],[507,530],[508,530],[513,530],[515,530],[517,530]],"b":[[15,"impl-MappingFlags"],[16,"impl-Flags-for-MappingFlags"],[31,"impl-Octal-for-MappingFlags"],[32,"impl-Binary-for-MappingFlags"],[33,"impl-Debug-for-MappingFlags"],[34,"impl-UpperHex-for-MappingFlags"],[35,"impl-LowerHex-for-MappingFlags"],[36,"impl-From%3CDescriptorAttr%3E-for-MappingFlags"],[38,"impl-From%3CPageTableFlags%3E-for-MappingFlags"],[39,"impl-From%3CPTEFlags%3E-for-MappingFlags"],[40,"impl-From%3CPTEFlags%3E-for-MappingFlags"],[42,"impl-MappingFlags"],[43,"impl-Flags-for-MappingFlags"],[103,"impl-DescriptorAttr"],[104,"impl-DescriptorAttr"],[109,"impl-DescriptorAttr"],[110,"impl-Flags-for-DescriptorAttr"],[111,"impl-DescriptorAttr"],[126,"impl-DescriptorAttr"],[127,"impl-DescriptorAttr"],[128,"impl-DescriptorAttr"],[129,"impl-DescriptorAttr"],[130,"impl-DescriptorAttr"],[131,"impl-DescriptorAttr"],[132,"impl-DescriptorAttr"],[133,"impl-DescriptorAttr"],[138,"impl-Debug-for-DescriptorAttr"],[139,"impl-UpperHex-for-DescriptorAttr"],[140,"impl-Binary-for-DescriptorAttr"],[141,"impl-Octal-for-DescriptorAttr"],[142,"impl-LowerHex-for-DescriptorAttr"],[149,"impl-DescriptorAttr"],[150,"impl-DescriptorAttr"],[151,"impl-DescriptorAttr"],[152,"impl-Flags-for-DescriptorAttr"],[153,"impl-DescriptorAttr"],[154,"impl-DescriptorAttr"],[155,"impl-DescriptorAttr"],[158,"impl-DescriptorAttr"],[159,"impl-DescriptorAttr"],[160,"impl-DescriptorAttr"],[161,"impl-DescriptorAttr"],[162,"impl-DescriptorAttr"],[163,"impl-DescriptorAttr"],[164,"impl-DescriptorAttr"],[165,"impl-DescriptorAttr"],[170,"impl-DescriptorAttr"],[171,"impl-DescriptorAttr"],[172,"impl-DescriptorAttr"],[173,"impl-DescriptorAttr"],[177,"impl-DescriptorAttr"],[178,"impl-DescriptorAttr"],[179,"impl-DescriptorAttr"],[180,"impl-DescriptorAttr"],[186,"impl-DescriptorAttr"],[187,"impl-DescriptorAttr"],[188,"impl-DescriptorAttr"],[189,"impl-DescriptorAttr"],[194,"impl-DescriptorAttr"],[195,"impl-DescriptorAttr"],[196,"impl-DescriptorAttr"],[197,"impl-DescriptorAttr"],[207,"impl-DescriptorAttr"],[208,"impl-DescriptorAttr"],[224,"impl-PTEFlags"],[225,"impl-PTEFlags"],[230,"impl-Flags-for-PTEFlags"],[231,"impl-PTEFlags"],[232,"impl-PTEFlags"],[243,"impl-PTEFlags"],[244,"impl-PTEFlags"],[245,"impl-PTEFlags"],[246,"impl-PTEFlags"],[247,"impl-PTEFlags"],[248,"impl-PTEFlags"],[249,"impl-PTEFlags"],[250,"impl-PTEFlags"],[253,"impl-LowerHex-for-PTEFlags"],[254,"impl-UpperHex-for-PTEFlags"],[255,"impl-Binary-for-PTEFlags"],[256,"impl-Debug-for-PTEFlags"],[257,"impl-Octal-for-PTEFlags"],[262,"impl-PTEFlags"],[263,"impl-PTEFlags"],[264,"impl-PTEFlags"],[265,"impl-PTEFlags"],[266,"impl-Flags-for-PTEFlags"],[267,"impl-PTEFlags"],[268,"impl-PTEFlags"],[270,"impl-PTEFlags"],[271,"impl-PTEFlags"],[272,"impl-PTEFlags"],[273,"impl-PTEFlags"],[274,"impl-PTEFlags"],[275,"impl-PTEFlags"],[276,"impl-PTEFlags"],[277,"impl-PTEFlags"],[281,"impl-PTEFlags"],[282,"impl-PTEFlags"],[283,"impl-PTEFlags"],[284,"impl-PTEFlags"],[288,"impl-PTEFlags"],[289,"impl-PTEFlags"],[290,"impl-PTEFlags"],[291,"impl-PTEFlags"],[296,"impl-PTEFlags"],[297,"impl-PTEFlags"],[298,"impl-PTEFlags"],[299,"impl-PTEFlags"],[304,"impl-PTEFlags"],[305,"impl-PTEFlags"],[306,"impl-PTEFlags"],[307,"impl-PTEFlags"],[314,"impl-PTEFlags"],[315,"impl-PTEFlags"],[326,"impl-PTEFlags"],[327,"impl-PTEFlags"],[332,"impl-PTEFlags"],[333,"impl-Flags-for-PTEFlags"],[334,"impl-PTEFlags"],[345,"impl-PTEFlags"],[346,"impl-PTEFlags"],[347,"impl-PTEFlags"],[348,"impl-PTEFlags"],[349,"impl-PTEFlags"],[350,"impl-PTEFlags"],[351,"impl-PTEFlags"],[352,"impl-PTEFlags"],[355,"impl-Debug-for-PTEFlags"],[356,"impl-LowerHex-for-PTEFlags"],[357,"impl-UpperHex-for-PTEFlags"],[358,"impl-Octal-for-PTEFlags"],[359,"impl-Binary-for-PTEFlags"],[364,"impl-PTEFlags"],[365,"impl-PTEFlags"],[366,"impl-PTEFlags"],[367,"impl-PTEFlags"],[368,"impl-Flags-for-PTEFlags"],[369,"impl-PTEFlags"],[370,"impl-PTEFlags"],[372,"impl-PTEFlags"],[373,"impl-PTEFlags"],[374,"impl-PTEFlags"],[375,"impl-PTEFlags"],[376,"impl-PTEFlags"],[377,"impl-PTEFlags"],[378,"impl-PTEFlags"],[379,"impl-PTEFlags"],[383,"impl-PTEFlags"],[384,"impl-PTEFlags"],[385,"impl-PTEFlags"],[386,"impl-PTEFlags"],[390,"impl-PTEFlags"],[391,"impl-PTEFlags"],[392,"impl-PTEFlags"],[393,"impl-PTEFlags"],[398,"impl-PTEFlags"],[399,"impl-PTEFlags"],[400,"impl-PTEFlags"],[401,"impl-PTEFlags"],[406,"impl-PTEFlags"],[407,"impl-PTEFlags"],[408,"impl-PTEFlags"],[409,"impl-PTEFlags"],[416,"impl-PTEFlags"],[417,"impl-PTEFlags"],[450,"impl-Flags-for-PageTableFlags"],[451,"impl-PageTableFlags"],[472,"impl-Binary-for-PageTableFlags"],[473,"impl-LowerHex-for-PageTableFlags"],[474,"impl-Octal-for-PageTableFlags"],[475,"impl-UpperHex-for-PageTableFlags"],[476,"impl-Debug-for-PageTableFlags"],[481,"impl-PageTableFlags"],[482,"impl-Flags-for-PageTableFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKYAOQARAAAAFAABABcAAQAdAAAAIAAFACcAAgAsAAAANAAAAEoAAgBvAAAAcQAAAHQACgCIAAAAigAIAJkAAACqAAAArwACALcAAQC6AAAAvwABAMcACADnAAAA6gAAAO0ABgD9AAYABQEAAAsBAAAZAQAAHgECACUBAQAoAQAALQEBADUBBQBOAQAAUAEAAFMBBgBjAQcAcQEAAH8BAACEAQIAiwEBAI4BAACTAQEAmwEFAMIBAQDHAQkA1QEAANcBBgDgAQAA4wEAAOcBAADtAQAA8AECAPUBAQD4AQEA/AEBAAICBQA=","P":[[19,"T"],[21,""],[29,"T"],[30,""],[37,"T"],[38,""],[45,"T"],[46,""],[50,"U"],[51,"IntoIterator::IntoIter"],[52,""],[73,"U,T"],[74,"U"],[75,""],[115,"T"],[121,""],[136,"T"],[137,""],[146,"T"],[149,""],[156,"T"],[157,""],[166,"U"],[169,"IntoIterator::IntoIter"],[170,""],[198,"U,T"],[201,"U"],[204,""],[236,"T"],[240,""],[251,"T"],[252,""],[259,"T"],[260,""],[261,"T"],[262,""],[269,"T"],[270,""],[278,"U"],[280,"IntoIterator::IntoIter"],[281,""],[308,"U,T"],[310,"U"],[312,""],[338,"T"],[342,""],[353,"T"],[354,""],[362,"T"],[364,""],[371,"T"],[372,""],[380,"U"],[382,"IntoIterator::IntoIter"],[383,""],[410,"U,T"],[412,"U"],[414,""],[454,"T"],[458,""],[469,"T"],[470,""],[477,"T"],[479,""],[484,"T"],[485,""],[486,"__H"],[487,""],[490,"U"],[492,""],[513,"U,T"],[515,"U"],[517,""]]}],["page_table_multiarch",{"t":"PPETPEPPPPTTGFGKKIPPPFFTRCNMNNNNNNNNNNNNNNMNNNNNMNNNNNNNNNNNNNNNNCNNNMNNNNCNNNNNNNNNNNNNNNNNNNNNNCIFNNNNNNNNNFITTNNNNNNNNNNNNNFIFIKNNNNMNNNNNNNNNNNNIFNNNNNNNN","n":["AlreadyMapped","Err","GenericPTE","LEVELS","MappedToHugePage","MappingFlags","NoMemory","NotAligned","NotMapped","Ok","PA_MAX_ADDR","PA_MAX_BITS","PageSize","PageTable64","PagingError","PagingHandler","PagingMetaData","PagingResult","Size1G","Size2M","Size4K","TlbFlush","TlbFlushAll","VA_MAX_BITS","VirtAddr","aarch64","align_offset","alloc_frame","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","copy_from","dealloc_frame","drop","eq","","flush","flush_all","flush_tlb","fmt","","from","","","","","ignore","","into","","","","","is_aligned","is_huge","loongarch64","map","map_region","paddr_is_valid","phys_to_virt","protect","protect_region","query","remap","riscv","root_paddr","to_owned","try_from","","","","","try_into","","","","","try_new","type_id","","","","","unmap","unmap_region","vaddr_is_valid","walk","x86_64","A64PageTable","A64PagingMetaData","borrow","borrow_mut","flush_tlb","from","into","try_from","try_into","type_id","vaddr_is_valid","LA64MetaData","LA64PageTable","PWCH_VALUE","PWCL_VALUE","borrow","borrow_mut","clone","clone_into","clone_to_uninit","flush_tlb","fmt","from","into","to_owned","try_from","try_into","type_id","Sv39MetaData","Sv39PageTable","Sv48MetaData","Sv48PageTable","SvVirtAddr","borrow","","borrow_mut","","flush_tlb","","","from","","into","","try_from","","try_into","","type_id","","X64PageTable","X64PagingMetaData","borrow","borrow_mut","flush_tlb","from","into","try_from","try_into","type_id"],"q":[[0,"page_table_multiarch"],[98,"page_table_multiarch::aarch64"],[109,"page_table_multiarch::loongarch64"],[126,"page_table_multiarch::riscv"],[148,"page_table_multiarch::x86_64"],[158,"memory_addr::addr"],[159,"core::option"],[160,"page_table_multiarch::bits64"],[161,"page_table_entry"],[162,"core::fmt"],[163,"core::ops::function"],[164,"core::result"],[165,"core::any"],[166,"page_table_multiarch::arch::loongarch64"],[167,"page_table_multiarch::arch::riscv"],[168,"page_table_multiarch::arch"],[169,"page_table_multiarch::arch::aarch64"],[170,"page_table_multiarch::arch::x86_64"]],"i":"AjBh`Ad2`222100``````b00``11`0AhAbAnB`7421074444232741057421074102107444`22532222`2421074210742210742252```Cj00000000``Cf00000000000000`````ClCn10Ch212121212121``D`0000000","f":"``````````````````````````{{bd}d}{{}{{h{f}}}}{j{{j{c}}}{}}0000{{{j{l}}}{{j{lc}}}{}}0000{{{j{b}}}b}{{j{j{lc}}}n{}}{{jA`}n}{{{j{l{Ab{ceg}}}}{j{{Ab{ceg}}}}d}nAdAfAh}{fn}{{{j{l{Ab{ceg}}}}}nAdAfAh}{{{j{Aj}}{j{Aj}}}Al}{{{j{b}}{j{b}}}Al}{{{An{c}}}nAd}{{{B`{c}}}nAd}{{{h{c}}}n{}}{{{j{Aj}}{j{lBb}}}Bd}{{{j{b}}{j{lBb}}}Bd}{cc{}}000054{{}c{}}0000{{bd}Al}{bAl}`{{{j{l{Ab{ceg}}}}fbBf}{{Bh{{An{c}}}}}AdAfAh}{{{j{l{Ab{ceg}}}}idBfAlAl}{{Bh{{B`{c}}}}}AdAfAh{{Bl{}{{Bj{f}}}}}}{dAl}{fBn}{{{j{l{Ab{ceg}}}}Bf}{{Bh{{C`{b{An{c}}}}}}}AdAfAh}{{{j{l{Ab{ceg}}}}dBfAl}{{Bh{{B`{c}}}}}AdAfAh}{{{j{{Ab{ceg}}}}}{{Bh{{C`{fBfb}}}}}AdAfAh}{{{j{l{Ab{ceg}}}}fBf}{{Bh{{C`{b{An{c}}}}}}}AdAfAh}`{{{j{{Ab{ceg}}}}}fAdAfAh}{jc{}}{c{{Cb{e}}}{}{}}0000{{}{{Cb{c}}}{}}0000{{}{{Bh{{Ab{ceg}}}}}AdAfAh}{jCd}0000{{{j{l{Ab{ceg}}}}}{{Bh{{C`{fb{An{c}}}}}}}AdAfAh}{{{j{l{Ab{ceg}}}}dAl}{{Bh{{B`{c}}}}}AdAfAh}={{{j{{Ab{ceg}}}}d{h{{j{i}}}}{h{{j{i}}}}}BhAdAfAh{{Bl{dd{j{e}}}}}}```{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{h{Bn}}}n}{cc{}}{{}c{}};:8{dAl}````54{{{j{Cf}}}Cf}{{j{j{lc}}}n{}}{{jA`}n}6{{{j{Cf}}{j{lBb}}}Bd}65{jc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{jCd}`````==<<{{{h{Ch}}}n}{{{h{c}}}nCh}0<<;;443322``?>=<;432","D":"Jn","p":[[6,"PageSize",0],[1,"usize"],[5,"PhysAddr",158],[6,"Option",159,null,1],[1,"reference",null,null,1],[0,"mut"],[1,"unit"],[1,"u8"],[5,"PageTable64",0,160],[10,"PagingMetaData",0],[10,"GenericPTE",161],[10,"PagingHandler",0],[6,"PagingError",0],[1,"bool"],[5,"TlbFlush",0],[5,"TlbFlushAll",0],[5,"Formatter",162],[8,"Result",162],[5,"MappingFlags",161],[8,"PagingResult",0],[17,"Output"],[10,"Fn",163],[5,"VirtAddr",158],[1,"tuple",null,null,1],[6,"Result",164,null,1],[5,"TypeId",165],[5,"LA64MetaData",109,166],[10,"SvVirtAddr",126,167],[5,"A64PagingMetaData",98],[5,"Sv39MetaData",126],[5,"Sv48MetaData",126],[5,"X64PagingMetaData",148]],"r":[[2,161],[5,161],[13,160],[25,168],[28,160],[33,160],[41,160],[43,160],[51,160],[58,160],[65,168],[66,160],[67,160],[70,160],[71,160],[72,160],[73,160],[74,168],[75,160],[77,160],[82,160],[87,160],[88,160],[93,160],[94,160],[96,160],[97,168],[98,169],[99,169],[109,166],[110,166],[111,166],[112,166],[113,166],[114,166],[115,166],[116,166],[117,166],[118,166],[119,166],[120,166],[121,166],[122,166],[123,166],[124,166],[125,166],[126,167],[127,167],[128,167],[129,167],[130,167],[135,167],[148,170],[149,170]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEcAEAADAAAABgAAAB0ADAAsAAIAMgABAE0ACgBZAAQAZQACAGoAAwByAAYAewADAIQAAwCJAAEAjwAFAJcAAgCcAAIA","P":[[28,"T"],[38,""],[39,"T"],[40,""],[41,"M,PTE,H"],[42,""],[43,"M,PTE,H"],[44,""],[46,"M"],[48,"PagingMetaData::VirtAddr"],[49,""],[51,"T"],[56,"M"],[58,"U"],[63,""],[66,"M,PTE,H"],[67,"M,PTE,H,"],[68,""],[70,"M,PTE,H"],[76,"T"],[77,"U,T"],[82,"U"],[87,"M,PTE,H"],[88,""],[93,"M,PTE,H"],[95,""],[96,"M,PTE,H,F"],[100,"T"],[102,""],[103,"T"],[104,"U"],[105,"U,T"],[106,"U"],[107,""],[113,"T"],[115,""],[116,"T"],[117,""],[120,"T"],[121,"U"],[122,"T"],[123,"U,T"],[124,"U"],[125,""],[131,"T"],[135,""],[136,"VA"],[138,"T"],[140,"U"],[142,"U,T"],[144,"U"],[146,""],[150,"T"],[152,""],[153,"T"],[154,"U"],[155,"U,T"],[156,"U"],[157,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[19203,5550]}